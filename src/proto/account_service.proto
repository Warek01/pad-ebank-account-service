syntax = "proto3";

package account_service;

import "currency.proto";

service AccountService {
  rpc Login (LoginCredentials) returns (AuthCredentials);
  rpc Register (RegisterCredentials) returns (AuthCredentials);
  rpc GetProfile (GetProfileOptions) returns (Profile);
  rpc AddCurrency (AddCurrencyOptions) returns (AddCurrencyResult);
  rpc CanPerformTransaction (TransactionData) returns (CanPerformTransactionResult);
  rpc ChangeCurrency (ChangeCurrencyOptions) returns (ChangeCurrencyResult);
  rpc BlockCard (CardIdentifier) returns (BlockCardResult);
  rpc UnblockCard (CardIdentifier) returns (UnblockCardResult);
}

message LoginCredentials {
  string email = 1;
  string password = 2;
}

message AuthCredentials {
  string email = 1;
  string full_name = 2;
  AuthStatus auth_status = 4;
}

message RegisterCredentials {
  string email = 1;
  string password = 2;
  string full_name = 3;
}

enum AuthStatus {
  SUCCESS = 0;
  USER_ALREADY_EXISTS = 1;
  USER_NOT_FOUND = 3;
  INVALID_CREDENTIALS = 2;
}

message GetProfileOptions {
  string email = 1;
}

message Profile {
  string email = 1;
  string full_name = 2;
}

message AddCurrencyOptions {
  shared.Currency currency = 1;
  int32 amount = 2;
}

message AddCurrencyResult {
  bool success = 1;
}

message TransactionData {
  shared.Currency currency = 1;
  int32 amount = 2;
  string email = 3;
}

message CanPerformTransactionResult {
  bool can_perform = 1;
}

message ChangeCurrencyOptions {
  shared.Currency currency = 1;
}

message ChangeCurrencyResult {
  bool success = 1;
}

message CardIdentifier {
  string card_code = 1;
}

message BlockCardResult {
  bool success = 1;
}

message UnblockCardResult {
  bool success = 1;
}
